{{- if and (eq .chezmoi.os "linux") .install_linux_apps -}}
#!/usr/bin/env bash

set -eufo pipefail

# if shell is interactive, prompt for sudo
if [[ $- == *i* ]]; then
  sudo -v
fi

# Keep-alive: update existing `sudo` time stamp until linux installs have finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

sudo apt update

packages=(
    "bat"
    "colordiff"
    "direnv"
    "expect" # needed to set shell on Parrot
    "fd-find"
    "fzf"
    "gh"
    "git"
    "gpg"
    "grc"
    "htop"
    "jq"
    "less"
    "nmap"
    "pipx"
    "shellcheck"
    "tig"
    "tldr"
    "tmux"
    "tree"
    "universal-ctags"
    "vim"
    "wget"
    "xclip"
)

# security only packages - kali only
# this separate list helps with Github CI to pass
# not doing this on parrot because all it does is complain
{{ if eq .osid "linux-kali" }}

sec_packages=(
    "atuin"
    "bloodhound"
    "chisel"
    "cloud-enum"
    "dnscat2"
    "enum4linux-ng"
    "hurl"
    "gobuster"
    "ncat"
    "neo4j"
    "netexec"
    "nishang"
    "pacu"
    "peass"
    "python3-wsgidav"
    "python-wsgidav-doc"
    "rlwrap"
    "seclists"
    "sshuttle"
)
packages+=("${sec_packages[@]}")

{{ end }}

# Loop through the array and install each package
for package in "${packages[@]}"; do
    echo "Installing $package..."
    sudo apt install -y $package
done

# Install pipx packages
pipx_packages=(
  "git+https://github.com/brightio/penelope.git"
  "git+https://github.com/Tib3rius/AutoRecon.git"
  "git+https://github.com/Densaugeo/uploadserver.git"
  "poetry"
  "updog"
)

for pipx_packages in "${pipx_packages[@]}"; do
  echo "Installing pipx package $pipx_package"
  pipx install $pipx_package
done

# install eza: https://github.com/eza-community/eza#debian-and-ubuntu
if [ ! -d /etc/apt/keyrings ]; then
    sudo mkdir -p /etc/apt/keyrings
fi
wget -qO- https://raw.githubusercontent.com/eza-community/eza/main/deb.asc | sudo gpg --dearmor -o /etc/apt/keyrings/gierens.gpg
echo "deb [signed-by=/etc/apt/keyrings/gierens.gpg] http://deb.gierens.de stable main" | sudo tee /etc/apt/sources.list.d/gierens.list
sudo chmod 644 /etc/apt/keyrings/gierens.gpg /etc/apt/sources.list.d/gierens.list
sudo apt update
sudo apt install -y eza

### RUST INSTALLS

# noninteractive rust install (needed for delta)
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
source "$HOME/.cargo/env"

# install delta
cargo install git-delta

# install lazygit
LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": "v\K[^"]*')
if [[ $(arch) == "x86_64" ]]; then
  curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"
else
  curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_arm64.tar.gz"
fi
tar xf lazygit.tar.gz lazygit
sudo install lazygit /usr/local/bin
sudo rm -rf "$HOME"/lazygit*

# navi
cargo install --locked navi

# Remove packages
rm_packages=("nano")

for pkg in "${rm_packages[@]}"; do
    # Check if package is installed
    if command -v "$pkg" >/dev/null 2>&1; then
        echo "$pkg is installed. Removing it now."
        sudo apt remove -y "$pkg"
    fi
done

{{- end -}}
